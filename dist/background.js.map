{"version":3,"file":"background.js","mappings":"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","sources":["webpack://timetracker-react-ext/./src/background.js"],"sourcesContent":["// src/background.js\n\n// Use the correct API: in Firefox, \"browser\" is defined and returns promises;\n// in Chrome (or as a fallback) use \"chrome\". We assign it to extBrowser.\nconst extBrowser = (typeof browser !== 'undefined') ? browser : chrome;\n\nconst TIMETRACKER_BASE_URL = 'https://timetracker.iglu.ee/api';\nconst TIMETRACKER_LOGIN_URL = `${TIMETRACKER_BASE_URL}/login`;\nconst TIMETRACKER_TASKS_URL = `${TIMETRACKER_BASE_URL}/tasks`;\n\n/**\n * Helper to safely extract an error message.\n */\nfunction getErrorMessage(err) {\n    if (err instanceof Error) return err.message;\n    return String(err);\n}\n\n/**\n * Logs in with the provided username and password.\n * Always throws an Error object on failure.\n */\nasync function loginToTimetracker(username, password) {\n    console.log('loginToTimetracker: Attempting login for', username);\n    const response = await fetch(TIMETRACKER_LOGIN_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n        body: JSON.stringify({ username, password })\n    });\n\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('loginToTimetracker error:', errorText);\n        throw new Error(`Login failed: ${errorText}`);\n    }\n\n    const token = response.headers.get('x-Auth-Token');\n    if (!token) {\n        throw new Error('No x-Auth-Token found in response headers.');\n    }\n\n    await extBrowser.storage.local.set({ timetrackerAuthToken: token });\n    console.log('loginToTimetracker: Received token:', token);\n    return token;\n}\n\n/**\n * Retrieves the current user using the stored token.\n */\nasync function getCurrentUser() {\n    const result = await extBrowser.storage.local.get('timetrackerAuthToken');\n    const timetrackerAuthToken = result.timetrackerAuthToken;\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n\n    const response = await fetch(`${TIMETRACKER_BASE_URL}/users/current`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        throw new Error('Failed to fetch current user');\n    }\n\n    const user = await response.json();\n    console.log('getCurrentUser: user object:', user);\n    return user;\n}\n\n/**\n * Retrieves projects for the given user ID.\n */\nasync function getProjectsForUser(personId) {\n    const result = await extBrowser.storage.local.get('timetrackerAuthToken');\n    const timetrackerAuthToken = result.timetrackerAuthToken;\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const url = `${TIMETRACKER_BASE_URL}/projects?isActive=true&personId=${personId}`;\n    console.log('getProjectsForUser: requesting', url);\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        throw new Error('Failed to fetch projects');\n    }\n\n    const projects = await response.json();\n    console.log('getProjectsForUser: projects count =', projects.length);\n    return projects;\n}\n\n/**\n * Returns an object with the current user and their projects.\n */\nasync function getProjects() {\n    const user = await getCurrentUser();\n    const projects = await getProjectsForUser(user.id);\n    return { user, projects };\n}\n\n/**\n * Creates a new Timetracker task.\n */\nasync function doCreateTask(issueKey, issueSummary, project) {\n    const result = await extBrowser.storage.local.get('timetrackerAuthToken');\n    const timetrackerAuthToken = result.timetrackerAuthToken;\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const postData = {\n        name: `${issueKey} - ${issueSummary}`,\n        type: 'development',\n        project\n    };\n\n    console.log('doCreateTask: Creating task with payload:', postData);\n\n    const response = await fetch(TIMETRACKER_TASKS_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Accept': 'application/json, text/plain, */*',\n            'x-auth-token': timetrackerAuthToken\n        },\n        body: JSON.stringify(postData)\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (response.status === 400) {\n        const errorResponse = await response.json();\n        console.error('doCreateTask: 400 error:', errorResponse);\n        if (\n            Array.isArray(errorResponse) &&\n            errorResponse.length > 0 &&\n            errorResponse[0].message?.code === 'taskDuplicateKey'\n        ) {\n            throw new Error('Task already exists in Timetracker!');\n        } else {\n            throw new Error(JSON.stringify(errorResponse));\n        }\n    }\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('doCreateTask: error text:', errorText);\n        throw new Error(errorText);\n    }\n\n    const data = await response.json();\n    console.log('doCreateTask: (Partial) task created:', data);\n    return data;\n}\n\n/**\n * Finds a Timetracker task by name for a given user.\n */\nasync function findTaskByName(taskName, personId) {\n    const result = await extBrowser.storage.local.get('timetrackerAuthToken');\n    const timetrackerAuthToken = result.timetrackerAuthToken;\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const encodedName = encodeURIComponent(taskName);\n    const url = `${TIMETRACKER_BASE_URL}/calendar/tasks/actions/findByName/${encodedName}?selectedPersonId=${personId}`;\n    console.log('findTaskByName: GET', url);\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        throw new Error('Failed to find task by name');\n    }\n\n    const resultData = await response.json();\n    console.log('findTaskByName: result =', resultData);\n    return resultData;\n}\n\n/**\n * Builds an array of roles from a roles array.\n */\nfunction buildRoles(rolesArray) {\n    let bitMask = \"01\";\n    const userRoles = {};\n    for (let i = 0; i < rolesArray.length; i++) {\n        const role = rolesArray[i];\n        const intCode = parseInt(bitMask, 2);\n        userRoles[role] = {\n            bitMask: intCode,\n            title: role\n        };\n        bitMask = (intCode << 1).toString(2);\n    }\n    return Object.values(userRoles);\n}\n\n/**\n * Creates a worklog entry.\n */\nasync function createWorklog(taskFromContent, startTime, endTime, comment, userFromContent) {\n    const result = await extBrowser.storage.local.get('timetrackerAuthToken');\n    const timetrackerAuthToken = result.timetrackerAuthToken;\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n\n    const finalPerson = {\n        id: userFromContent.id,\n        fullName: userFromContent.fullName,\n        firstName: userFromContent.firstName,\n        lastName: userFromContent.lastName,\n        roles: buildRoles(userFromContent.roles || []),\n        startDate: userFromContent.startDate || null,\n        endDate: userFromContent.endDate || null\n    };\n\n    const finalTask = {\n        id: taskFromContent.id,\n        name: taskFromContent.name,\n        type: taskFromContent.type,\n        project: taskFromContent.project,\n        isActive: taskFromContent.isActive,\n        hasWorklogs: taskFromContent.hasWorklogs,\n        isCommentRequired: taskFromContent.isCommentRequired,\n        estimateDevel: taskFromContent.estimateDevel || 0,\n        estimateAnal: taskFromContent.estimateAnal || 0,\n        estimateTest: taskFromContent.estimateTest || 0,\n        estimateBuffer: taskFromContent.estimateBuffer || 0,\n        estimateGeneral: taskFromContent.estimateGeneral || 0,\n        generalDuration: taskFromContent.generalDuration,\n        generalDurationHours: taskFromContent.generalDurationHours,\n        firstInGroup: taskFromContent.firstInGroup\n    };\n\n    const bodyData = {\n        startTime,\n        endTime,\n        comment: comment || '',\n        isPlanlog: false,\n        task: finalTask,\n        person: finalPerson\n    };\n\n    console.log('createWorklog: final payload =>', bodyData);\n\n    const url = `${TIMETRACKER_BASE_URL}/calendar/worklogs`;\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Accept': 'application/json, text/plain, */*',\n            'x-auth-token': timetrackerAuthToken\n        },\n        body: JSON.stringify(bodyData)\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('createWorklog: error text:', errorText);\n        throw new Error(errorText);\n    }\n\n    const responseText = await response.text();\n    let data = {};\n    try {\n        data = responseText ? JSON.parse(responseText) : {};\n    } catch (e) {\n        console.error('createWorklog: JSON parse error:', e);\n    }\n    console.log('createWorklog: success response:', data);\n    return data;\n}\n\n// Listen for messages from content scripts or the UI.\nextBrowser.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    console.log('background.js - onMessage:', request);\n\n    if (request.action === 'GET_PROJECTS_AND_USER') {\n        getProjects()\n            .then(({ user, projects }) => {\n                sendResponse({ success: true, user, projects });\n                console.log('GET_PROJECTS_AND_USER success:', user, projects);\n            })\n            .catch((err) => {\n                console.error('GET_PROJECTS_AND_USER error:', err);\n                const msg = getErrorMessage(err);\n                if (msg === 'NO_TOKEN' || msg === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: msg });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'LOGIN') {\n        const { username, password } = request.payload;\n        loginToTimetracker(username, password)\n            .then(() => getProjects())\n            .then(({ user, projects }) => {\n                sendResponse({ success: true, user, projects });\n            })\n            .catch((err) => {\n                console.error('LOGIN error:', err);\n                const msg = getErrorMessage(err);\n                sendResponse({ success: false, error: msg });\n            });\n        return true;\n    }\n\n    if (request.action === 'FIND_TASK_BY_NAME') {\n        const { taskName, personId } = request.payload;\n        findTaskByName(taskName, personId)\n            .then((result) => sendResponse({ success: true, data: result }))\n            .catch((err) => {\n                console.error('FIND_TASK_BY_NAME error:', err);\n                const msg = getErrorMessage(err);\n                if (msg === 'NO_TOKEN' || msg === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: msg });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'CREATE_TIMETRACKER_TASK') {\n        const { issueKey, issueSummary, project } = request.payload;\n        doCreateTask(issueKey, issueSummary, project)\n            .then((partialTask) => {\n                sendResponse({ success: true, data: partialTask });\n            })\n            .catch((err) => {\n                console.error('CREATE_TIMETRACKER_TASK error:', err);\n                const msg = getErrorMessage(err);\n                if (msg === 'NO_TOKEN' || msg === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: msg });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'CREATE_WORKLOG') {\n        const { task, startTime, endTime, comment, person } = request.payload;\n        createWorklog(task, startTime, endTime, comment, person)\n            .then((result) => {\n                sendResponse({ success: true, data: result });\n            })\n            .catch((err) => {\n                console.error('CREATE_WORKLOG error:', err);\n                const msg = getErrorMessage(err);\n                if (msg === 'NO_TOKEN' || msg === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: msg });\n                }\n            });\n        return true;\n    }\n});\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","extBrowser","browser","chrome","TIMETRACKER_BASE_URL","TIMETRACKER_LOGIN_URL","concat","TIMETRACKER_TASKS_URL","getErrorMessage","err","message","String","_loginToTimetracker","_callee","username","password","response","errorText","token","_context","console","log","fetch","headers","body","JSON","stringify","ok","text","error","get","storage","local","set","timetrackerAuthToken","getCurrentUser","_getCurrentUser","_callee2","result","user","_context2","status","json","getProjectsForUser","_x3","_getProjectsForUser","_callee3","personId","url","projects","_context3","getProjects","_getProjects","_callee4","_context4","id","_doCreateTask","_callee5","issueKey","issueSummary","project","postData","_errorResponse$0$mess","errorResponse","data","_context5","Array","isArray","code","_findTaskByName","_callee6","taskName","encodedName","resultData","_context6","encodeURIComponent","buildRoles","rolesArray","bitMask","userRoles","role","intCode","parseInt","title","toString","_createWorklog","_callee7","taskFromContent","startTime","endTime","comment","userFromContent","finalPerson","finalTask","bodyData","responseText","_context7","fullName","firstName","lastName","roles","startDate","endDate","isActive","hasWorklogs","isCommentRequired","estimateDevel","estimateAnal","estimateTest","estimateBuffer","estimateGeneral","generalDuration","generalDurationHours","firstInGroup","isPlanlog","task","person","parse","runtime","onMessage","addListener","request","sender","sendResponse","action","_ref","success","msg","needCredentials","_request$payload","payload","_x","_x2","loginToTimetracker","_ref2","_request$payload2","_x7","_x8","findTaskByName","_request$payload3","_x4","_x5","_x6","doCreateTask","partialTask","_request$payload4","_x9","_x10","_x11","_x12","_x13","createWorklog"],"sourceRoot":""}