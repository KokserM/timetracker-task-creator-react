{"version":3,"file":"background.js","mappings":"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","sources":["webpack://timetracker-react-ext/./src/background.js"],"sourcesContent":["// src/background.js\n\nconst TIMETRACKER_BASE_URL = 'https://timetracker.iglu.ee/api';\nconst TIMETRACKER_LOGIN_URL = `${TIMETRACKER_BASE_URL}/login`;\nconst TIMETRACKER_TASKS_URL = `${TIMETRACKER_BASE_URL}/tasks`;\n\n/**\n * Logs in with given username/password – returns x-auth-token\n * and stores it in chrome.storage.local.\n */\nasync function loginToTimetracker(username, password) {\n    console.log('loginToTimetracker: Attempting login for', username);\n    const response = await fetch(TIMETRACKER_LOGIN_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n        body: JSON.stringify({ username, password })\n    });\n\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('loginToTimetracker error:', errorText);\n        throw new Error(`Login failed: ${errorText}`);\n    }\n\n    const token = response.headers.get('x-Auth-Token');\n    if (!token) {\n        throw new Error('No x-Auth-Token found in response headers.');\n    }\n\n    await chrome.storage.local.set({ timetrackerAuthToken: token });\n    console.log('loginToTimetracker: Received token:', token);\n    return token;\n}\n\n/**\n * Uses the stored token to get the current user.\n */\nasync function getCurrentUser() {\n    const { timetrackerAuthToken } = await chrome.storage.local.get('timetrackerAuthToken');\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const response = await fetch(`${TIMETRACKER_BASE_URL}/users/current`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        throw new Error('Failed to fetch current user');\n    }\n\n    const user = await response.json();\n    console.log('getCurrentUser: user object:', user);\n    return user;\n}\n\n/**\n * Uses the stored token to get projects for the given user id.\n */\nasync function getProjectsForUser(personId) {\n    const { timetrackerAuthToken } = await chrome.storage.local.get('timetrackerAuthToken');\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const url = `${TIMETRACKER_BASE_URL}/projects?isActive=true&personId=${personId}`;\n    console.log('getProjectsForUser: requesting', url);\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        throw new Error('Failed to fetch projects');\n    }\n\n    const projects = await response.json();\n    console.log('getProjectsForUser: projects count =', projects.length);\n    return projects;\n}\n\n/**\n * Return user + all active projects for that user.\n */\nasync function getProjects() {\n    const user = await getCurrentUser();\n    const projects = await getProjectsForUser(user.id);\n    return { user, projects };\n}\n\n/**\n * Create a new Timetracker task.\n * (The response may be partial.)\n */\nasync function doCreateTask(issueKey, issueSummary, project) {\n    const { timetrackerAuthToken } = await chrome.storage.local.get('timetrackerAuthToken');\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const postData = {\n        name: `${issueKey} - ${issueSummary}`,\n        type: 'development',\n        project\n    };\n\n    console.log('doCreateTask: Creating task with payload:', postData);\n\n    const response = await fetch(TIMETRACKER_TASKS_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Accept': 'application/json, text/plain, */*',\n            'x-auth-token': timetrackerAuthToken\n        },\n        body: JSON.stringify(postData)\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (response.status === 400) {\n        const errorResponse = await response.json();\n        console.error('doCreateTask: 400 error:', errorResponse);\n        if (\n            Array.isArray(errorResponse) &&\n            errorResponse.length > 0 &&\n            errorResponse[0].message?.code === 'taskDuplicateKey'\n        ) {\n            throw new Error('Task already exists in Timetracker!');\n        } else {\n            throw new Error(JSON.stringify(errorResponse));\n        }\n    }\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('doCreateTask: error text:', errorText);\n        throw new Error(errorText);\n    }\n\n    const data = await response.json();\n    console.log('doCreateTask: (Partial) task created:', data);\n    return data;\n}\n\n/**\n * Find a Timetracker task by name for the given user.\n * Returns an array with FULL task objects.\n */\nasync function findTaskByName(taskName, personId) {\n    const { timetrackerAuthToken } = await chrome.storage.local.get('timetrackerAuthToken');\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n    const issueKey = taskName.split(' - ')[0].trim();\n    const encodedName = encodeURIComponent(issueKey);\n    const url = `${TIMETRACKER_BASE_URL}/calendar/tasks/actions/findByName/${encodedName}?selectedPersonId=${personId}`;\n    console.log('findTaskByName: GET', url);\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'x-auth-token': timetrackerAuthToken\n        }\n    });\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    const result = await response.json();\n    console.log('findTaskByName: result =', result);\n    return result;\n}\n\n/**\n * Build roles dynamically into objects with bitMask values.\n * ...\n */\nfunction buildRoles(rolesArray) {\n    let bitMask = \"01\";\n    const userRoles = {};\n    for (let i = 0; i < rolesArray.length; i++) {\n        const role = rolesArray[i];\n        const intCode = parseInt(bitMask, 2);\n        userRoles[role] = {\n            bitMask: intCode,\n            title: role\n        };\n        bitMask = (intCode << 1).toString(2);\n    }\n    return Object.values(userRoles);\n}\n\n/**\n * Create a worklog entry using a FULL task object.\n */\nasync function createWorklog(taskFromContent, startTime, endTime, comment, userFromContent) {\n    const { timetrackerAuthToken } = await chrome.storage.local.get('timetrackerAuthToken');\n    if (!timetrackerAuthToken) {\n        throw new Error('NO_TOKEN');\n    }\n\n    const finalPerson = {\n        id: userFromContent.id,\n        fullName: userFromContent.fullName,\n        firstName: userFromContent.firstName,\n        lastName: userFromContent.lastName,\n        roles: buildRoles(userFromContent.roles || []),\n        startDate: userFromContent.startDate || null,\n        endDate: userFromContent.endDate || null\n    };\n\n    const finalTask = {\n        id: taskFromContent.id,\n        name: taskFromContent.name,\n        type: taskFromContent.type,\n        project: taskFromContent.project,\n        isActive: taskFromContent.isActive,\n        hasWorklogs: taskFromContent.hasWorklogs,\n        isCommentRequired: taskFromContent.isCommentRequired,\n        estimateDevel: taskFromContent.estimateDevel || 0,\n        estimateAnal: taskFromContent.estimateAnal || 0,\n        estimateTest: taskFromContent.estimateTest || 0,\n        estimateBuffer: taskFromContent.estimateBuffer || 0,\n        estimateGeneral: taskFromContent.estimateGeneral || 0,\n        generalDuration: taskFromContent.generalDuration,\n        generalDurationHours: taskFromContent.generalDurationHours,\n        firstInGroup: taskFromContent.firstInGroup\n    };\n\n    const bodyData = {\n        startTime,\n        endTime,\n        comment: comment || '',\n        isPlanlog: false,\n        task: finalTask,\n        person: finalPerson\n    };\n\n    console.log('createWorklog: final payload =>', bodyData);\n\n    const url = `${TIMETRACKER_BASE_URL}/calendar/worklogs`;\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Accept': 'application/json, text/plain, */*',\n            'x-auth-token': timetrackerAuthToken\n        },\n        body: JSON.stringify(bodyData)\n    });\n\n    if (response.status === 401) {\n        throw new Error('TOKEN_INVALID');\n    }\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('createWorklog: error text:', errorText);\n        throw new Error(errorText);\n    }\n\n    const responseText = await response.text();\n    let data;\n    try {\n        data = responseText ? JSON.parse(responseText) : {};\n    } catch (e) {\n        console.error('createWorklog: Failed to parse JSON:', e);\n        data = {};\n    }\n    console.log('createWorklog: success response:', data);\n    return data;\n}\n\n/**\n * Listen for messages from the content script.\n */\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    console.log('background.js - onMessage:', request);\n\n    if (request.action === 'GET_PROJECTS_AND_USER') {\n        getProjects()\n            .then(({ user, projects }) => {\n                sendResponse({ success: true, user, projects });\n                console.log('GET_PROJECTS_AND_USER success:', user, projects);\n            })\n            .catch(err => {\n                console.error('GET_PROJECTS_AND_USER error:', err.message);\n                if (err.message === 'NO_TOKEN' || err.message === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: err.message });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'LOGIN') {\n        const { username, password } = request.payload;\n        loginToTimetracker(username, password)\n            .then(() => getProjects())\n            .then(({ user, projects }) => sendResponse({ success: true, user, projects }))\n            .catch(err => {\n                console.error('LOGIN error:', err.message);\n                sendResponse({ success: false, error: err.message });\n            });\n        return true;\n    }\n\n    if (request.action === 'FIND_TASK_BY_NAME') {\n        const { taskName, personId } = request.payload;\n        findTaskByName(taskName, personId)\n            .then(result => sendResponse({ success: true, data: result }))\n            .catch(err => {\n                console.error('FIND_TASK_BY_NAME error:', err.message);\n                if (err.message === 'NO_TOKEN' || err.message === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: err.message });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'CREATE_TIMETRACKER_TASK') {\n        const { issueKey, issueSummary, project } = request.payload;\n        doCreateTask(issueKey, issueSummary, project)\n            .then(partialTask => sendResponse({ success: true, data: partialTask }))\n            .catch(err => {\n                console.error('CREATE_TIMETRACKER_TASK error:', err.message);\n                if (err.message === 'NO_TOKEN' || err.message === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: err.message });\n                }\n            });\n        return true;\n    }\n\n    if (request.action === 'CREATE_WORKLOG') {\n        const { task, startTime, endTime, comment, person } = request.payload;\n        createWorklog(task, startTime, endTime, comment, person)\n            .then(result => sendResponse({ success: true, data: result }))\n            .catch(err => {\n                console.error('CREATE_WORKLOG error:', err.message);\n                if (err.message === 'NO_TOKEN' || err.message === 'TOKEN_INVALID') {\n                    sendResponse({ success: false, needCredentials: true });\n                } else {\n                    sendResponse({ success: false, error: err.message });\n                }\n            });\n        return true;\n    }\n});\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","TIMETRACKER_BASE_URL","TIMETRACKER_LOGIN_URL","concat","TIMETRACKER_TASKS_URL","_loginToTimetracker","_callee","username","password","response","errorText","token","_context","console","log","fetch","headers","body","JSON","stringify","ok","text","error","get","chrome","storage","local","set","timetrackerAuthToken","getCurrentUser","_getCurrentUser","_callee2","_yield$chrome$storage","user","_context2","status","json","getProjectsForUser","_x3","_getProjectsForUser","_callee3","personId","_yield$chrome$storage2","url","projects","_context3","getProjects","_getProjects","_callee4","_context4","id","_doCreateTask","_callee5","issueKey","issueSummary","project","_yield$chrome$storage3","postData","_errorResponse$0$mess","errorResponse","data","_context5","Array","isArray","message","code","_findTaskByName","_callee6","taskName","_yield$chrome$storage4","encodedName","result","_context6","split","trim","encodeURIComponent","buildRoles","rolesArray","bitMask","userRoles","role","intCode","parseInt","title","toString","_createWorklog","_callee7","taskFromContent","startTime","endTime","comment","userFromContent","_yield$chrome$storage5","finalPerson","finalTask","bodyData","responseText","_context7","fullName","firstName","lastName","roles","startDate","endDate","isActive","hasWorklogs","isCommentRequired","estimateDevel","estimateAnal","estimateTest","estimateBuffer","estimateGeneral","generalDuration","generalDurationHours","firstInGroup","isPlanlog","task","person","parse","runtime","onMessage","addListener","request","sender","sendResponse","action","_ref","success","err","needCredentials","_request$payload","payload","_x","_x2","loginToTimetracker","_ref2","_request$payload2","_x7","_x8","findTaskByName","_request$payload3","_x4","_x5","_x6","doCreateTask","partialTask","_request$payload4","_x9","_x10","_x11","_x12","_x13","createWorklog"],"sourceRoot":""}